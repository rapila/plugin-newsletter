Widget.types.newsletter_detail = {
	initialize: function() {
		this.init_content();
		var _this = this;
		Widget.create('detail', function(widget) {
			_this.detail_widget = widget.set_instance(_this);
			jQuery.extend(widget.settings, {
				title: "{{writeString=wns.new_entry}}",
				width: 800,
				height: 660
			});
			widget.content = _this.content;
			_this.accordion = jQuery(widget.content.find('div.accordion')).accordion({active: 0, autoHeight: false, clearStyle: true, collapsible:false}).
			bind('accordionchangestart', function(event, ui) {
			});
			
			var allow_load_template = _this.auto_open; // add other conditions for loading template apart from is new
			var newletter_detail = _this;
			var template_select = _this.content.find("select[name='template_name']").change(function() {
				if(allow_load_template) {
					newletter_detail.update_newsletter_body(newletter_detail.getNewsletterBody(template_select.val()));
				}
			});
			// prepare template options
			var option = jQuery('<option/>');
			jQuery.each(_this.getMatchingCustomTemplates(), function(i, template) {
				option.clone().text(template).attr('value', template).appendTo(template_select);
			});
			jQuery('<option/>').text("{{writeString=wns.newsletter.choose_template}}").val('').prependTo(template_select);
			template_select.find("option:first-child").attr('selected', true);

			widget.handle('opening-initial', function() {
				_this.init_textareas();
			});

			if(_this.auto_open) {
				_this.open();
			}
		});
		
		this.handle('saving', function() {
			var text = this.get_newsletter_text();
			if(text.data('widget')) {
				text.data('widget').data_to_textarea();
			}
			this.detail_widget.clear_validation();
		}.bind(this));
	},
	
	open: function() {
		if(!this.detail_widget) {
			this.auto_open = true;
			return false;
		}
		this.detail_widget.open();
	},
	
	init_content: function() {
		this.content = jQuery.parseHTML("{{includeTemplate=edit}}");
		this.content.find("select[name='language_id']").prepareWidget(function(widget) {
			widget.settings.international_option = false;
		}, jQuery.noop);
	},
	
	send_info_text: function(is_hot) {
		var send_info_text = this.content.find('span.status_send_info');
		if(is_hot) {
			send_info_text.text("{{writeString=wns.newsletter.send_hot_info}}");
		} else {
			send_info_text.text("{{writeString=wns.newsletter.send_test_info}}");
		}
	},
	
	fill_data: function() {
		var _this = this;
		var newsletter_data = this.getNewsletterData();
		this.content.find("input[name='subject']").val(newsletter_data.Subject);
		this.content.find("select[name='language_id']").val(newsletter_data.LanguageId);
		this.content.find("select[name='template_name']").val(newsletter_data.TemplateName || '');
		this.content.find(".updated_info").text(newsletter_data.UpdatedInfo);
		this.content.find(".created_info").text(newsletter_data.CreatedInfo);
		var is_approved = this.content.find("input[name='is_approved']");
		if(newsletter_data.HasBeedSent) {
			this.content.find('input').attr('disabled', true);
			this.content.find('select').attr('disabled', true);
			// is_approved.attr('disabled', true);
		}
		is_approved.bind('change', function() {
			_this.send_info_text(jQuery(this).attr('checked'));
		}).attr('checked', newsletter_data.IsApproved);

		this.send_info_text(newsletter_data.IsApproved);
		this.update_newsletter_body(this.getNewsletterBody());
		this.detail_widget.set_title(this.detail_widget.settings.title = "{{writeString=wns.newsletter}} "+newsletter_data.Subject);
	},
	
	init_textareas: function() {
		var newsletter_text = this.get_newsletter_text();
		if(!newsletter_text.attr('data-widget-type')) {
			newsletter_text.attr('data-widget-type', 'rich_text').prepareWidget(function(widget) {
				widget.settings.height = 400;
				widget.settings.toolbar_Full = [
					['Bold','Italic','-'],
					['Link','Unlink'],
					['BulletedList'],
					['Undo','Redo','-','RemoveFormat'],
					['Image', 'PickImage'],['Source']],['Maximize','Styles','Format'];
			}, jQuery.noop);
		}
	},
	
	update_newsletter_body: function(newsletter_body) {
		var newsletter_text = this.get_newsletter_text();
		newsletter_text.find('textarea').val(newsletter_body);
		if(newsletter_text.data('widget')) {
			newsletter_text.data('widget').set_data(newsletter_body);
		}
	},
	
	get_newsletter_text: function() {
		return this.content.find('div.newsletter_body');
	},

	close: function() {
		this.detail_widget.close();
		this.close_callback();
	},
	
	save_callback: jQuery.noop,
	close_callback: jQuery.noop
};